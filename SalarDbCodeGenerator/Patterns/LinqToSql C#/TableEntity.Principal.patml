<?xml version="1.0" encoding="utf-8" ?>
<pattern>
	<Name>Principal Table Entity</Name>
	<Description>Business model pattern</Description>
	<Options
		Group="TableEntity"
		AppliesTo="TablesAndViews_All"
		Overwrite="True"
		FilePath="Entities\Principal\DatabaseEntity.cs"
		Language="C#"
		/>
	<BaseContent>
		<![CDATA[using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Text;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Xml.Serialization;
using [:Namespace:].Base;
using [:Namespace:].BLL;

namespace [:Namespace:].Entities
{
[#TablesAndViewsContent#]
}
]]>
	</BaseContent>

	<PatternContent Name="TablesAndViewsContent" AppliesTo="TablesAndViews_All" ContentKeyMode="OneReplacement">
		<BaseContent>[:InnerContent:]</BaseContent>
		<Content KeyMode="TheReplacement">
			<![CDATA[
	/// <summary>
	/// User custom methods for [:TableNativeName:]
	/// </summary>
	[Table(Name = "[:TableNativeName:]")]
	public partial class [:TableName:]Entity : BaseEntity
	{
		[#FieldsProperties#]
		[#ForeignKeys#]
	}
]]>
		</Content>

		<PatternContent Name="ForeignKeys" AppliesTo="ForeignKeys" ContentKeyMode="FieldForeignKey">
			<Content KeyMode="MultiplicityOne">
				<![CDATA[
		private EntityRef<[:ForeignTableName:]Entity> _[:LocalFieldName:]_[:ForeignTableName:]_[:ForeignFieldName:]Ref;
		/// <summary>
		/// [:ForeignTableNativeName:] - [:LocalFieldNativeName:]
		/// </summary>
		[Association(Name="[[:LocalFieldNativeName:]]", Storage = "_[:LocalFieldName:]_[:ForeignTableName:]_[:ForeignFieldName:]Ref", ThisKey = "[:LocalFieldName:]", OtherKey="[:ForeignFieldName:]", IsForeignKey=true)]
		[XmlIgnoreAttribute()]
		[SoapIgnoreAttribute()]
		[BrowsableAttribute(false)]
		public [:ForeignTableName:]Entity [:ForeignTableNameAsField:]
		{
			get { return this._[:LocalFieldName:]_[:ForeignTableName:]_[:ForeignFieldName:]Ref.Entity; }
			set { this._[:LocalFieldName:]_[:ForeignTableName:]_[:ForeignFieldName:]Ref.Entity = value; }
		}
]]>
			</Content>
			<Content KeyMode="MultiplicityMany">
				<![CDATA[
		private EntitySet<[:ForeignTableName:]Entity> _[:LocalFieldName:]_[:ForeignTableName:]_[:ForeignFieldName:]Many;
		/// <summary>
		/// [:ForeignTableNativeName:] - [:LocalFieldNativeName:]
		/// </summary>
		[Association(Name="[[:LocalFieldNativeName:]]", Storage = "_[:LocalFieldName:]_[:ForeignTableName:]_[:ForeignFieldName:]Many", ThisKey = "[:LocalFieldName:]", OtherKey="[:ForeignFieldName:]", IsForeignKey=true)]
		[XmlIgnoreAttribute()]
		[SoapIgnoreAttribute()]
		[BrowsableAttribute(false)]
		public EntitySet<[:ForeignTableName:]Entity> [:ForeignTableNameAsField:]
		{
			get { return this._[:LocalFieldName:]_[:ForeignTableName:]_[:ForeignFieldName:]Many; }
			set { this._[:LocalFieldName:]_[:ForeignTableName:]_[:ForeignFieldName:]Many.Assign(value); }
		}
]]>
			</Content>
		</PatternContent>

		<PatternContent Name="FieldsProperties" AppliesTo="Columns" ContentKeyMode="FieldKeyType">
			<Content KeyMode="AutoInrcementPrimaryKey">
				<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]"), Description("[:FieldDescription:]")]
		[Column(Name="[[:FieldNativeName:]]", IsPrimaryKey = [:FieldIsPrimaryKey:], IsDbGenerated = true, CanBeNull = [:FieldCanBeNull:], DbType = "[:FieldDbTypeSize:]")]
		public [:FieldDotNetType:] [:FieldName:] { get; set; }]]>
			</Content>
			<Content KeyMode="AutoInrcement">
				<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]"), Description("[:FieldDescription:]")]
		[Column(Name="[[:FieldNativeName:]]", IsPrimaryKey = [:FieldIsPrimaryKey:], IsDbGenerated = false, CanBeNull = [:FieldCanBeNull:], DbType = "[:FieldDbTypeSize:]")]
		public [:FieldDotNetType:] [:FieldName:] { get; set; }]]>
			</Content>
			<Content KeyMode="AutoIncNativeNullable">
				<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]"), Description("[:FieldDescription:]")]
		[Column(Name="[[:FieldNativeName:]]", IsPrimaryKey = [:FieldIsPrimaryKey:], IsDbGenerated = false, CanBeNull = [:FieldCanBeNull:], DbType = "[:FieldDbTypeSize:]")]
		public [:FieldDotNetType:] [:FieldName:] { get; set; }]]>
			</Content>
			<Content KeyMode="AutoIncNullableType">
				<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]"), Description("[:FieldDescription:]")]
		[Column(Name="[[:FieldNativeName:]]", IsPrimaryKey = [:FieldIsPrimaryKey:], IsDbGenerated = false, CanBeNull = [:FieldCanBeNull:], DbType = "[:FieldDbTypeSize:]")]
		public [:FieldDotNetType:]? [:FieldName:] { get; set; }]]>
			</Content>
			<Content KeyMode="PrimaryKey">
				<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]"), Description("[:FieldDescription:]")]
		[Column(Name="[[:FieldNativeName:]]", IsPrimaryKey = [:FieldIsPrimaryKey:], IsDbGenerated = true, CanBeNull = [:FieldCanBeNull:], DbType = "[:FieldDbTypeSize:]")]
		public [:FieldDotNetType:] [:FieldName:] { get; set; }]]>
			</Content>
			<Content KeyMode="NormalField">
				<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]"), Description("[:FieldDescription:]")]
		[Column(Name="[[:FieldNativeName:]]", IsPrimaryKey = [:FieldIsPrimaryKey:], IsDbGenerated = false, CanBeNull = [:FieldCanBeNull:], DbType = "[:FieldDbTypeSize:]")]
		public [:FieldDotNetType:] [:FieldName:] { get; set; }]]>
			</Content>
			<Content KeyMode="NativeNullable">
				<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]"), Description("[:FieldDescription:]")]
		[Column(Name="[[:FieldNativeName:]]", IsPrimaryKey = [:FieldIsPrimaryKey:], IsDbGenerated = false, CanBeNull = [:FieldCanBeNull:], DbType = "[:FieldDbTypeSize:]")]
		public [:FieldDotNetType:] [:FieldName:] { get; set; }]]>
			</Content>
			<Content KeyMode="NullableType">
				<![CDATA[
		/// <summary>
		/// [:FieldDescription:]
		/// </summary>
		[DisplayName("[:FieldDescription:]"), Description("[:FieldDescription:]")]
		[Column(Name="[[:FieldNativeName:]]", IsPrimaryKey = [:FieldIsPrimaryKey:], IsDbGenerated = false, CanBeNull = [:FieldCanBeNull:], DbType = "[:FieldDbTypeSize:]")]
		public [:FieldDotNetType:]? [:FieldName:] { get; set; }]]>
			</Content>
		</PatternContent>
	</PatternContent>
</pattern>